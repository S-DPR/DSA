=begin
20159번 동작 그만, 밑장 빼기냐?

카드가 N장 있다. (N은 짝수)
N장을 상대와 나에게 나누어줄건데, 반드시 나 -> 상대 -> 나 -> 상대 -> ... 순으로 나누어주어야한다.
평상시엔 맨 위에서 나누어주지만, 종종 맨 밑 장을 맨 윗장대신 나누어주려 한다.
이 행위를 한 번 이하로 한다고 할 때, 내가 가져갈 수 있는 최대점수를 구해보자.

싸늘하다.
몇 달 전의 내가 한참 고민을 해도 못풀었던 기억이 꽂힌다.
코틀린으로 한번, 루비로 한번.

그냥 특이한 누적합 문제입니다.
홀/짝을 누적합으로 구한 뒤, 아래 두 조건을 구현하면 됩니다.
1. 홀수번째를 내가 가져가고, 맨 아래꺼를 상대가 가져간다.
2. 내가 맨 아래꺼를 가져가고, 상대가 홀수번째를 받는다.

맨 아래 장을 한 번 나누어 주게 된다면 본인의 홀짝이 바뀌기때문에,
이와 같이 표현할 수 있습니다.

i번째 홀수장을 나누어준다 할 때,
(i 이하의 홀수 k에 대해 모든 odd[k]의 합) + (i 초과의 짝수 k에대해 모든 even[k]의 합)
(i 이하의 홀수 k에 대해 모든 odd[k]의 합) + (i 이상의 짝수 k에 대해 모든 even[k]의 합)-(본래 덱의 맨 뒷장 값)

밑장빼기를 하지 않는 경우는 그냥 odd의 합을 구하면 됩니다.
그러므로 각 홀수차례마다 밑장뺴기를 하는 경우만 하면 되고,
이 경우에 대하여 누구차례에 밑장빼기를 할 것인가에 대한 처리라고 생각하면 됩니다.
=end
N = gets.to_i
arr = gets.split.map &:to_i
last = arr[-1]
odd, even = [0], [0]
until arr.empty?
  odd.push(odd[-1]+arr.shift)
  even.push(even[-1]+arr.shift)
end
result = odd[-1]
(N/2).times do |i|
  # 홀수번째를 내가 받고, 맨 뒤에꺼를 상대가 가져감
  # 내가 맨 뒤에꺼를 가져가고, 상대가 홀수번째를 받음
  result = [result,
            odd[i]+even[-1]-even[i],
            odd[i]+even[-1]-even[i-1]-last].max
end
puts result