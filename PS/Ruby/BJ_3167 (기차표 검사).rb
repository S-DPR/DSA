=begin
3167번 기차표 검사

N개의 역을 지나는 기차가 있다.
이 기차는 기차표 검사를 하는데,
첫 번째 역으로 갈 때, 첫번째 역 이후 K번째 역을 출발할 때 검사한다.
매 역마다 들어오는 승객과 나가는 승객의 수가 주어진다.
위 규칙에 의해, 승객중 기차표 검사를 안받는 승객이 나올 수 있다.
그 최솟값과 최댓값을 구해보자.

범위가 1000이라서 순간 O(N^2) DP인가 고민하게했지만..
아무리봐도 그리디하게 처리하면 될것같은..
물론 대부분은 이러다 틀리지만, 얘는 좀 특수하네요.
자려다가 그냥 문제 하나 봤는데 좀 재밌어보여서 20분만에 풀었습니다.

그냥 대충 제일 적게 검사한때랑 제일 많이 검사할 때를 만듭시다. index 0은 검사한사람, 1은 안한사람입니다.
각 경우에, 검사 안한 승객의 수를 체크해줄 변수도 만듭시다.
그리고 제일 적게 검사할 때는 '검사하지 승객을 최대한 내리게 한다'라는 규칙으로,
제일 많이 검사할 때에는 '이미 검사한 승객을 최대한 많이 내리게 한다'라는 규칙으로 합니다.

승객을 내리게 할 때, 인덱스 1의 값을 뺄 순간이 온다면 검사안한 승객의 수를 올려줍시다.
제일 많이 검사를 할 때에는 최대한 인덱스 0번에서 값을 빼주고, (부족하면 1에서도 빼긴해야죠.)
제일 적게 검사할 때에는 최대한 인덱스 1번에서 값을 빼주어야합니다. (역시, 부족하면 0에서도 빼긴 해야죠.)
새로 탑승한 승객은 인덱스 1에 모두 집어넣어줍니다.

인덱스 1에 있는 값을 0으로 옮기는 순간은,
제일 처음에 받은 승하차 승객수를 0번 인덱스로, 제일 나중에 받는 N번 역을 N-1로 두면,
(idx%K)==0일 때마다 인덱스 1의 값을 0으로 옮기면 됩니다.
=end
N, K = gets.split.map &:to_i
min, max = [0, 0], [0, 0]
min_cnt, max_cnt = 0, 0
N.times do |i|
  x, y = gets.split.map &:to_i
  if min[1] >= x
    min_cnt += x
    min[1] -= x
  else
    min_cnt += min[1]
    min[0] -= x-min[1]
    min[1] = 0
  end
  if max[0] >= x
    max[0] -= x
  else
    max_cnt += x-max[0]
    max[1] -= x-max[0]
    max[0] = 0
  end
  min[1] += y
  max[1] += y
  if (i%K).zero?
    min = [min.sum, 0]
    max = [max.sum, 0]
  end
end
print max_cnt, " ", min_cnt