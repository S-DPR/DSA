"""
17255번 N으로 만들기
우리는 보통 수를 왼쪽에서 오른쪽으로 쓰죠.
하지만 원한다면 가운데서 시작해서 왼쪽쓰고 오른쪽쓰고 이럴 수 있습니다.
이 문제가 그런 문제입니다. 수 N을 입력받고, 그 수를 쓰는 방법을 세는 문제입니다.
단, 쓰는데 완전 중복인 경우의수는 제외입니다.
예를들어 121은 왼쪽에서 써도 121, 오른쪽에서 시작해도 121인데, 이런경우는 같은경우로 칩니다.
어떻게 풀까 고민 많이했는데, 수가 10000000밖에 안돼서 그냥 브루트포스 써도 되네요..
원래 천만은 작다고하긴 좀 무리가 있는 수지만, 여기선 자릿수로 세기때문에 8밖에 안되는겁니다.
"""

"""
먼저 이 문제를 지탱하는 함수입니다.
원래 수 N, 현재 만들어진 과정을 나타내는 t,
왼쪽 인덱스가 얼마나 진행되었나 나타내는 l, 오른쪽을 맡는 r입니다.
그냥 왼쪽으로 갈 수 있으면 왼쪽으로 한번 뻗어서 cache에 넣고,
오른쪽으로 갈 수 있으면 오른쪽으로 한번 뻗어서 cache에 넣습니다.

이 밖에선, BFS처럼 돌게됩니다. 다만, deque가 아니라 stack인게 다르겠죠.
아마 코드를 보면 바로 알 수 있을거라고 생각합니다. 직관적인편이라..
"""
def brute(n, t, l, r):
  if l > 0: cache.append([t+[n[l-1]+t[-1]], l-1, r])
  if r < len(n)-1: cache.append([t+[t[-1]+n[r+1]], l, r+1])

n = input()
visited = []
cnt = 0

for idx, i in enumerate(n):
  cache = [[[i], idx, idx]]
  while cache:
    t, l, r = cache.pop()
    if t[-1] == n:
      if t not in visited:
        visited.append(t)
        cnt+=1
    else: brute(n, t, l, r)
print(cnt)
