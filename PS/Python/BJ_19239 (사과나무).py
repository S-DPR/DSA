"""
19539번 사과나무

0이 N개있는 수열이 있다.
두 개의 원소를 2, 1 증가시키거나 하나의 원소를 3만큼 증가시킬 수 있다.
길이가 N인 수열이 주어질 때, 위 행위만으로 이 수열을 만들 수 있나 구해보자.

오랜만의 파이썬으로 푼 문제네요.
수는 작아도 솔솔 풍기는 수학의 향기
수학과 큰 관련없어보이는 이 문제를 수학과 엮어봅시다.

먼저, 3 단위로만 수를 증가시킬 수 있으므로 새 수열의 합은 무조건 3의 배수여야합니다.
수열을 2로 나눈 몫을 합한 값과 홀수의 개수를 각각 div, mod라고 합시다.
div는 반드시 mod 이상이어야합니다. 그래야 홀수의 개수를 맞출 수 있거든요.
그리고 div는 1+1, 즉 물을 두번 뿌리는 것과 같은 효과를 낼 수 있습니다.
즉 x를 1을 두 번 뿌리는 대신 2를 한 번 뿌리는 횟수라 할 때,
div-x = mod+2x 가 성립해야하고, 정리하면 x = (div-mod)/3이 됩니다.
x는 음이 아닌 정수이므로 div-mod또한 3의 배수가 되어야합니다.

최종적으로, 수열 원소의 합과 div-mod 모두 3의 배수이고, div >= mod인경우에 Yes를 출력하면 AC를 받을 수 있습니다.
"""
N = int(input())
arr = list(map(int, input().split()))
div = sum(map(lambda x: x//2, arr))
mod = sum(map(lambda x: x%2, arr))
print(['NO','YES'][div >= mod and not (div-mod)%3 and not sum(arr)%3])