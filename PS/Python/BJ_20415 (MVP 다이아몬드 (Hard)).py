"""
20415번 MVP 다이아몬드 (Hard)

빈 배열이 있고, 등급 B, S, G, P, D가 있다.
각 등급은 배열의 가장 최근 두 수의 합이 기준치를 넘어야 될 수 있다.
배열에 추가할 수는 D등급 기준치를 넘을 수없다.
이제, 현재까지 매겨졌던 등급의 길이 N이 주어진다.
이후 S, G, P, D의 기준치가 공백으로 구분되어 주어진다. B는 항상 0이 기준치이다.
마지막으로 길이 N의 B, S, G, P, D로 구성된 문자열이 주어진다.
각 문자는 최근 두 수를 더했을 때 될 수 있는 가장 높은 등급이 그 등급이었음을 나타낸다.
당신은 배열에 크기가 최대 D인 음의 정수가 아닌 정수값을 추가할 수 있다. 이때 배열 합의 최댓값을 구하시오.

풀고보니 플레 5
거기에 DP
체감난이도는 골드4~5..?
DP도 안썼고..
개인적으론 그리디 문제같습니다.
아래는 숏코딩 코드입니다. (156B)
"""
x=input
x()
d=dict(zip("BSGP",map(int,x().split())))
d['D']=d['P']
p=r=0
k=lambda t:d[t]-p-1 if t!='D' else d[t]
for i in x():r+=k(i);p=max(k(i),0)
print(r)
