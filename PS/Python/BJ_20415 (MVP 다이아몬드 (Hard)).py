"""
20415번 MVP 다이아몬드 (Hard)

0이 두개 있는 배열이 있고, 당신은 배열의 뒤쪽에 수를 집어넣을 수 있다.
이 때 가장 뒷자리 두 수를 더한 값을 k라고 해두자.
그리고, 이 값에 따라 B, S, G, P, D중 하나의 등급을 책정할 수 있다.
k의 값에 따라 가능한 등급중 가장 높은 등급을 책정받게 된다.
마지막으로, 당신이 넣을 수 있는 정수는 0 이상 D기준치 이하의 수이다.

입력의 첫 줄에 당신이 배열에 수를 넣을 수 있는 횟수 N이 들어온다.
입력에 두번째 줄에 S, G, P, D의 기준치가 들어온다. B의 기준치는 0이라 들어오지 않는다.
마지막으로 당신이 수를 넣을 때마다 책정받은 등급이 길이 N의 문자열로 들어온다.
세 번째 줄의 조건을 만족하면서 배열에 들어있을 수 있는 수의 최댓값을 출력하시오.
B, S, G, P, D의 기준치는 항상 오름차순임이 보장된다.
세 번째 줄에서 불가능한 조건을 요구하는 경우가 없음도 보장된다.

풀고보니 플레 5
거기에 DP
체감난이도는 골드4~5..?
DP도 안썼고..
개인적으론 그리디 문제같습니다.
아래는 숏코딩 코드입니다. (156B)
"""
x=input
x()
d=dict(zip("BSGP",map(int,x().split())))
d['D']=d['P']
p=r=0
k=lambda t:d[t]-p-1 if t!='D' else d[t]
for i in x():r+=k(i);p=max(k(i),0)
print(r)
